openapi: 3.0.0
x-stoplight:
  id: 867vdz3cyydne
info:
  title: todo
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /todos:
    get:
      summary: Todo一覧取得
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoList'
              examples:
                Example 1:
                  value:
                    - parentId: string
                      id: string
                      title: string
                      note: string
                      price: 0
                      categoryType: string
                      categoryItem: string
                      updatedAt: string
                      updatedBy: string
                      subRows:
                        - parentId: string
                          id: string
                          title: string
                          note: string
                          price: 0
                          categoryType: string
                          categoryItem: string
                          updatedAt: string
                          updatedBy: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-todos
      parameters:
        - schema:
            type: string
          in: query
          name: title
        - schema:
            type: string
          in: query
          name: note
        - schema:
            type: number
          in: query
          name: price
        - schema:
            type: string
          in: query
          name: categoryType
        - schema:
            type: string
          in: query
          name: categoryItem
        - schema:
            type: string
          in: query
          name: date1
        - schema:
            type: string
          in: query
          name: date2
        - schema:
            type: string
          in: query
          name: updatedBy
      description: ''
    parameters: []
    post:
      summary: Todo新規追加
      operationId: post-todos
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTodo'
            examples:
              Example 1:
                value:
                  title: string
                  note: string
                  price: 0
                  categoryType: string
                  categoryItem: string
                  updatedBy: string
    put:
      summary: Todo編集
      operationId: put-todos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTodo'
            examples:
              Example 1:
                value:
                  parentId: string
                  title: string
                  note: string
                  price: 0
                  categoryType: string
                  categoryItem: string
                  updatedBy: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Todo削除
      operationId: delete-todos
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTodo'
            examples:
              Example 1:
                value:
                  id: string
                  updatedBy: string
      parameters: []
components:
  schemas:
    TodoList:
      title: TodoList
      x-stoplight:
        id: b77b735612d33
      type: object
      x-examples:
        Example 1:
          parentId: string
          id: string
          title: string
          note: string
          price: 0
          categoryType: string
          categoryItem: string
          updatedAt: string
          updatedBy: string
          subRows:
            - parentId: string
              id: string
              title: string
              note: string
              price: 0
              categoryType: string
              categoryItem: string
              updatedAt: string
              updatedBy: string
      properties:
        parentId:
          type: string
        id:
          type: string
        title:
          type: string
        note:
          type: string
        price:
          type: number
          nullable: true
        categoryType:
          type: string
        categoryItem:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: string
        subRows:
          type: array
          items:
            type: object
            properties:
              parentId:
                type: string
              id:
                type: string
              title:
                type: string
              note:
                type: string
              price:
                type: number
                nullable: true
              categoryType:
                type: string
              categoryItem:
                type: string
              updatedAt:
                type: string
              updatedBy:
                type: string
            required:
              - parentId
              - id
              - title
              - updatedAt
              - updatedBy
      required:
        - id
        - title
        - updatedAt
        - updatedBy
    SearchParams:
      title: SearchParams
      x-stoplight:
        id: zhx0ce6nm0hdp
      type: object
      description: Todoリストをgetするときのquery typescriptで使うための項目
      x-examples:
        Example 1:
          title: string
          categoryType: string
          categoryItem: string
          price: 0
          date1: string
          date2: string
      properties:
        title:
          type: string
        categoryType:
          type: string
        categoryItem:
          type: string
        price:
          type: number
          nullable: true
        date1:
          type: string
        date2:
          type: string
      required:
        - title
    PostTodo:
      title: PostTodo
      x-stoplight:
        id: uqgii3tmkkahi
      type: object
      x-examples:
        Example 1:
          title: string
          note: string
          price: 0
          categoryType: string
          categoryItem: string
          updatedBy: string
      properties:
        title:
          type: string
        note:
          type: string
        price:
          type: number
          nullable: true
        categoryType:
          type: string
        categoryItem:
          type: string
        updatedBy:
          type: string
      required:
        - title
        - updatedBy
    PutTodo:
      title: PutTodo
      x-stoplight:
        id: 05wt3z3w2hfj6
      type: object
      x-examples:
        Example 1:
          parentId: string
          title: string
          note: string
          price: 0
          categoryType: string
          categoryItem: string
          updatedBy: string
      properties:
        parentId:
          type: string
        title:
          type: string
        note:
          type: string
        price:
          type: number
          nullable: true
        categoryType:
          type: string
        categoryItem:
          type: string
        updatedBy:
          type: string
      required:
        - parentId
        - title
        - updatedBy
    DeleteTodo:
      title: DeleteTodo
      x-stoplight:
        id: 2wijya0vcc5yp
      type: object
      x-examples:
        Example 1:
          id: string
          updatedBy: string
      properties:
        id:
          type: string
        updatedBy:
          type: string
      required:
        - id
        - updatedBy
    Error:
      title: Error
      x-stoplight:
        id: buwakoncyce9i
      type: object
      properties:
        id:
          type: string
        message:
          type: string
      required:
        - id
        - message
      x-examples:
        Example 1:
          id: string
          message: string
  responses: {}
  parameters: {}
